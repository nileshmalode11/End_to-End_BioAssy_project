from kedro.pipeline import Pipeline,node

from .nodes import train_test_split,logreg,logreg_pred,logreg_accuracy,logreg_CReport,logreg_CMatrix,decisionTree,dt_pred,dt_score_CReport_CMatrix,RandomForest,RandomForest_pred,RF_score_CMatrix_CReport,svm,svm_pred,svm_score_CMatrix_CReport,AdaBoost,AdaBoost_pred,Adaboost_score_CMatrix_CReport

def create_pipeline(**kwargs):
    return Pipeline(
       [
            node(
                func=train_test_split,
                inputs=["X_pca_100","y_sample"],
                outputs=["X_train","X_test","y_train","y_test"],
                name="train_test_split",
            ),
            node(
                func=logreg,
                inputs=["X_train","y_train"],
                outputs="df_bio_logreg",
                name="logreg",
            ),
            node(
                func=logreg_pred,
                inputs=["X_train","X_test","df_bio_logreg"],
                outputs=["y_pred_train_log","y_pred_test_log"],
                name="logreg_pred",
            ),
             node(
                func=logreg_accuracy,
                inputs=["y_train","y_pred_train_log","y_test","y_pred_test_log"],
                outputs=["logreg_accuracy_train","logreg_accuracy_test"],
                name="logreg_accuracy",
            ),
            node(
                func=logreg_CReport,
                inputs=["y_test","y_pred_test_log"],
                outputs="logreg_Classi_report",
                name="logreg_CReport",
            ),
            node(
                func=logreg_CMatrix,
                inputs=["y_test","y_pred_test_log"],
                outputs="logreg_CMatrix",
                name="logreg_CMatrix",
            ),
            node( 
                func=decisionTree,
                inputs=["X_train","y_train"],
                outputs="decisionTree",
                name="decisionTree",
            ),
            node(
                func=dt_pred,
                inputs=["X_train","X_test","decisionTree"],
                outputs=["dt_pred_train","dt_pred_test"],
                name="dt_pred",
            ),
            node(
                func=dt_score_CReport_CMatrix,
                inputs=["y_train","y_test","dt_pred_train","dt_pred_test"],
                outputs=["dt_score_test","dt_score_train","dt_CReport","dt_CMatrix"],
                name="dt_score_CReport_CMatrix",
            ),
            node(
                func=RandomForest,
                inputs=["X_train","y_train"],
                outputs="RandomForest",
                name="RandomForest",
            ),
            node(
                func=RandomForest_pred,
                inputs=["X_train","X_test","RandomForest"],
                outputs=["rf_pred_test","rf_pred_train"],
                name="RandomForest_pred",
            ),
            node(
                func=RF_score_CMatrix_CReport,
                inputs=["y_train","y_test","rf_pred_train","rf_pred_test"],
                outputs=["RF_score_train","RF_score_test","rf_CMatrix","rf_CReport"],
                name="RF_score_CMatrix_CReport",
            ),
            node(
                func=svm,
                inputs=["X_train","y_train"],
                outputs="svm_model",
                name="svm",
            ),
            node(
                func=svm_pred,
                inputs=["X_train","X_test","svm_model"],
                outputs=["svm_pred_train","svm_pred_test"],
                name="svm_pred",
            ),
            node(
                func=svm_score_CMatrix_CReport,
                inputs=["y_train","y_test","svm_pred_train","svm_pred_test"],
                outputs=["svm_score_train","svm_score_test","svm_CMatrix","svm_CReport"],
                name="svm_score_CMatrix_CReport",
            ),
            node(
                func=AdaBoost,
                inputs=["X_train","y_train"],
                outputs="AdaBoost_model",
                name="AdaBoost",
            ),
            node(
                func=AdaBoost_pred,
                inputs=["X_train","X_test","AdaBoost_model"],
                outputs=["Adoost_pred_test","Adoost_pred_train"],
                name="AdaBoost_pred",
            ),
            node(
                func=Adaboost_score_CMatrix_CReport,
                inputs=["y_train","y_test","Adoost_pred_train","Adoost_pred_test"],
                outputs=["AdaBoost_score_train","Adaboost_score_test","Adaboost_CMatrix","Adaboost_CReport"],
                name="Adaboost_score_CMatrix_CReport",
            )
       ]
    ) 